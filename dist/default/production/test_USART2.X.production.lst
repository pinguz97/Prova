

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 03 11:38:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F452 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PORTC	set	3970
    55  0000                     _LATC	set	3979
    56  0000                     _TRISB	set	3987
    57  0000                     _PORTB	set	3969
    58  0000                     _LATB	set	3978
    59  0000                     _TXREG	set	4013
    60  0000                     _PIE1bits	set	3997
    61  0000                     _TXSTAbits	set	4012
    62  0000                     _SPBRG	set	4015
    63  0000                     _RCSTAbits	set	4011
    64  0000                     _PIR1bits	set	3998
    65  0000                     _PORTBbits	set	3969
    66  0000                     _RCREG	set	4014
    67  0000                     _INTCONbits	set	4082
    68  0000                     _TXIE	set	31980
    69  0000                     _TRISC7	set	31911
    70  0000                     _TRISC6	set	31910
    71  0000                     _RCIE	set	31981
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  0002A8                     __pcinit:
    77                           	callstack 0
    78  0002A8                     start_initialization:
    79                           	callstack 0
    80  0002A8                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (2 bytes)
    84  0002A8  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85  0002AA  6A0B               	clrf	__pbssCOMRAM& (0+255),c
    86  0002AC                     end_of_initialization:
    87                           	callstack 0
    88  0002AC                     __end_of__initialization:
    89                           	callstack 0
    90  0002AC  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  0002AE  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  0002B0  0100               	movlb	0
    93  0002B2  EF40  F000         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	bssCOMRAM
    96  00000B                     __pbssCOMRAM:
    97                           	callstack 0
    98  00000B                     _New_Char:
    99                           	callstack 0
   100  00000B                     	ds	1
   101  00000C                     _New_Char_Rx:
   102                           	callstack 0
   103  00000C                     	ds	1
   104                           
   105                           	psect	cstackCOMRAM
   106  000001                     __pcstackCOMRAM:
   107                           	callstack 0
   108  000001                     UART_write@c:
   109                           	callstack 0
   110                           
   111                           ; 1 bytes @ 0x0
   112  000001                     	ds	1
   113  000002                     ??_UART_start_comm:
   114                           
   115                           ; 1 bytes @ 0x1
   116  000002                     	ds	1
   117  000003                     UART_start_comm@timeout:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x2
   121  000003                     	ds	2
   122  000005                     UART_start_comm@elapsed_time:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x4
   126  000005                     	ds	2
   127  000007                     UART_start_comm@Rx_Data:
   128                           	callstack 0
   129                           
   130                           ; 1 bytes @ 0x6
   131  000007                     	ds	1
   132  000008                     main@button1state:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x7
   136  000008                     	ds	1
   137  000009                     main@button2state:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x8
   141  000009                     	ds	1
   142  00000A                     main@button3state:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x9
   146  00000A                     	ds	1
   147                           
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 69 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;  button3state    1    9[COMRAM] _Bool 
   158 ;;  button2state    1    8[COMRAM] _Bool 
   159 ;;  button1state    1    7[COMRAM] _Bool 
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2, status,0, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   169 ;;      Params:         0       0       0       0       0       0       0
   170 ;;      Locals:         3       0       0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0       0       0
   172 ;;      Totals:         3       0       0       0       0       0       0
   173 ;;Total ram usage:        3 bytes
   174 ;; Hardware stack levels required when called: 3
   175 ;; This function calls:
   176 ;;		_UART_init
   177 ;;		_UART_start_comm
   178 ;;		_UART_write
   179 ;;		_init_PORTS
   180 ;; This function is called by:
   181 ;;		Startup code after reset
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text0
   186  000080                     __ptext0:
   187                           	callstack 0
   188  000080                     _main:
   189                           	callstack 28
   190  000080  FFFF               	dw	65535	; assembler added errata NOP
   191                           
   192                           ;main.c: 71:     init_PORTS();
   193  000082  EC48  F001         	call	_init_PORTS	;wreg free
   194                           
   195                           ;main.c: 72:     UART_init();
   196  000086  EC27  F001         	call	_UART_init	;wreg free
   197  00008A                     
   198                           ;main.c: 73:     UART_start_comm();
   199  00008A  ECD6  F000         	call	_UART_start_comm	;wreg free
   200  00008E                     
   201                           ;main.c: 74:     (INTCONbits.GIE = 1);
   202  00008E  8EF2               	bsf	242,7,c	;volatile
   203  000090                     
   204                           ;main.c: 75:      _Bool button1state = 0;
   205  000090  0E00               	movlw	0
   206  000092  6E08               	movwf	main@button1state^0,c
   207  000094                     
   208                           ;main.c: 76:      _Bool button2state = 0;
   209  000094  0E00               	movlw	0
   210  000096  6E09               	movwf	main@button2state^0,c
   211  000098                     
   212                           ;main.c: 77:      _Bool button3state = 0;
   213  000098  0E00               	movlw	0
   214  00009A  6E0A               	movwf	main@button3state^0,c
   215  00009C                     l860:
   216  00009C  FFFF               	dw	65535	; assembler added errata NOP
   217                           
   218                           ;main.c: 80:     {;main.c: 81:         if(New_Char_Rx)
   219  00009E  500C               	movf	_New_Char_Rx^0,w,c
   220  0000A0  B4D8               	btfsc	status,2,c
   221  0000A2  EF55  F000         	goto	u61
   222  0000A6  EF58  F000         	goto	u60
   223  0000AA                     u61:
   224  0000AA  FFFF               	dw	65535	; assembler added errata NOP
   225  0000AC  EF5F  F000         	goto	l32
   226  0000B0                     u60:
   227  0000B0  FFFF               	dw	65535	; assembler added errata NOP
   228  0000B2                     
   229                           ;main.c: 82:         {;main.c: 83:            New_Char = RCREG;
   230  0000B2  CFAE F00B          	movff	4014,_New_Char	;volatile
   231  0000B6                     
   232                           ;main.c: 87:             New_Char_Rx = 0;
   233  0000B6  0E00               	movlw	0
   234  0000B8  6E0C               	movwf	_New_Char_Rx^0,c
   235                           
   236                           ;main.c: 88:         }
   237  0000BA  EFAA  F000         	goto	l878
   238  0000BE                     l32:
   239  0000BE  FFFF               	dw	65535	; assembler added errata NOP
   240  0000C0  B081               	btfsc	129,0,c	;volatile
   241  0000C2  EF65  F000         	goto	u71
   242  0000C6  EF68  F000         	goto	u70
   243  0000CA                     u71:
   244  0000CA  FFFF               	dw	65535	; assembler added errata NOP
   245  0000CC  EF78  F000         	goto	l34
   246  0000D0                     u70:
   247  0000D0  FFFF               	dw	65535	; assembler added errata NOP
   248  0000D2  0408               	decf	main@button1state^0,w,c
   249  0000D4  A4D8               	btfss	status,2,c
   250  0000D6  EF6F  F000         	goto	u81
   251  0000DA  EF72  F000         	goto	u80
   252  0000DE                     u81:
   253  0000DE  FFFF               	dw	65535	; assembler added errata NOP
   254  0000E0  EF78  F000         	goto	l34
   255  0000E4                     u80:
   256  0000E4  FFFF               	dw	65535	; assembler added errata NOP
   257  0000E6                     
   258                           ;main.c: 90:             UART_write(0x30);
   259  0000E6  0E30               	movlw	48
   260  0000E8  EC38  F001         	call	_UART_write
   261                           
   262                           ;main.c: 91:         }
   263  0000EC  EFAA  F000         	goto	l878
   264  0000F0                     l34:
   265  0000F0  FFFF               	dw	65535	; assembler added errata NOP
   266  0000F2  B281               	btfsc	129,1,c	;volatile
   267  0000F4  EF7E  F000         	goto	u91
   268  0000F8  EF81  F000         	goto	u90
   269  0000FC                     u91:
   270  0000FC  FFFF               	dw	65535	; assembler added errata NOP
   271  0000FE  EF91  F000         	goto	l36
   272  000102                     u90:
   273  000102  FFFF               	dw	65535	; assembler added errata NOP
   274  000104  0409               	decf	main@button2state^0,w,c
   275  000106  A4D8               	btfss	status,2,c
   276  000108  EF88  F000         	goto	u101
   277  00010C  EF8B  F000         	goto	u100
   278  000110                     u101:
   279  000110  FFFF               	dw	65535	; assembler added errata NOP
   280  000112  EF91  F000         	goto	l36
   281  000116                     u100:
   282  000116  FFFF               	dw	65535	; assembler added errata NOP
   283  000118                     
   284                           ;main.c: 93:             UART_write(0x40);
   285  000118  0E40               	movlw	64
   286  00011A  EC38  F001         	call	_UART_write
   287                           
   288                           ;main.c: 94:         }
   289  00011E  EFAA  F000         	goto	l878
   290  000122                     l36:
   291  000122  FFFF               	dw	65535	; assembler added errata NOP
   292  000124  B481               	btfsc	129,2,c	;volatile
   293  000126  EF97  F000         	goto	u111
   294  00012A  EF9A  F000         	goto	u110
   295  00012E                     u111:
   296  00012E  FFFF               	dw	65535	; assembler added errata NOP
   297  000130  EFAA  F000         	goto	l35
   298  000134                     u110:
   299  000134  FFFF               	dw	65535	; assembler added errata NOP
   300  000136  040A               	decf	main@button3state^0,w,c
   301  000138  A4D8               	btfss	status,2,c
   302  00013A  EFA1  F000         	goto	u121
   303  00013E  EFA4  F000         	goto	u120
   304  000142                     u121:
   305  000142  FFFF               	dw	65535	; assembler added errata NOP
   306  000144  EFAA  F000         	goto	l35
   307  000148                     u120:
   308  000148  FFFF               	dw	65535	; assembler added errata NOP
   309  00014A                     
   310                           ;main.c: 96:             UART_write(0x41);
   311  00014A  0E41               	movlw	65
   312  00014C  EC38  F001         	call	_UART_write
   313  000150  EFAA  F000         	goto	l878
   314  000154                     l35:
   315  000154                     l878:
   316  000154  FFFF               	dw	65535	; assembler added errata NOP
   317                           
   318                           ;main.c: 99:             button1state = PORTBbits.RB0;
   319  000156  B081               	btfsc	129,0,c	;volatile
   320  000158  EFB0  F000         	goto	u131
   321  00015C  EFB4  F000         	goto	u130
   322  000160                     u131:
   323  000160  FFFF               	dw	65535	; assembler added errata NOP
   324  000162  0E01               	movlw	1
   325  000164  EFB6  F000         	goto	u136
   326  000168                     u130:
   327  000168  FFFF               	dw	65535	; assembler added errata NOP
   328  00016A  0E00               	movlw	0
   329  00016C                     u136:
   330  00016C  FFFF               	dw	65535	; assembler added errata NOP
   331  00016E  6E08               	movwf	main@button1state^0,c
   332  000170                     
   333                           ;main.c: 100:             button2state = PORTBbits.RB1;
   334  000170  B281               	btfsc	129,1,c	;volatile
   335  000172  EFBD  F000         	goto	u141
   336  000176  EFC1  F000         	goto	u140
   337  00017A                     u141:
   338  00017A  FFFF               	dw	65535	; assembler added errata NOP
   339  00017C  0E01               	movlw	1
   340  00017E  EFC3  F000         	goto	u146
   341  000182                     u140:
   342  000182  FFFF               	dw	65535	; assembler added errata NOP
   343  000184  0E00               	movlw	0
   344  000186                     u146:
   345  000186  FFFF               	dw	65535	; assembler added errata NOP
   346  000188  6E09               	movwf	main@button2state^0,c
   347  00018A                     
   348                           ;main.c: 101:             button3state = PORTBbits.RB2;
   349  00018A  B481               	btfsc	129,2,c	;volatile
   350  00018C  EFCA  F000         	goto	u151
   351  000190  EFCE  F000         	goto	u150
   352  000194                     u151:
   353  000194  FFFF               	dw	65535	; assembler added errata NOP
   354  000196  0E01               	movlw	1
   355  000198  EFD0  F000         	goto	u156
   356  00019C                     u150:
   357  00019C  FFFF               	dw	65535	; assembler added errata NOP
   358  00019E  0E00               	movlw	0
   359  0001A0                     u156:
   360  0001A0  FFFF               	dw	65535	; assembler added errata NOP
   361  0001A2  6E0A               	movwf	main@button3state^0,c
   362  0001A4  EF4E  F000         	goto	l860
   363  0001A8  EF3E  F000         	goto	start
   364  0001AC                     __end_of_main:
   365                           	callstack 0
   366                           
   367 ;; *************** function _init_PORTS *****************
   368 ;; Defined at:
   369 ;;		line 9 in file "init_PIC.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   383 ;;      Params:         0       0       0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels used: 1
   389 ;; Hardware stack levels required when called: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text1
   398  000290                     __ptext1:
   399                           	callstack 0
   400  000290                     _init_PORTS:
   401                           	callstack 0
   402  000290  FFFF               	dw	65535	; assembler added errata NOP
   403  000292                     
   404                           ;init_PIC.c: 11:     LATB = 0;
   405  000292  0E00               	movlw	0
   406  000294  6E8A               	movwf	138,c	;volatile
   407                           
   408                           ;init_PIC.c: 12:     PORTB = 0;
   409  000296  0E00               	movlw	0
   410  000298  6E81               	movwf	129,c	;volatile
   411  00029A                     
   412                           ;init_PIC.c: 13:     TRISB = 0xFF;
   413  00029A  6893               	setf	147,c	;volatile
   414                           
   415                           ;init_PIC.c: 15:     LATC = 0;
   416  00029C  0E00               	movlw	0
   417  00029E  6E8B               	movwf	139,c	;volatile
   418                           
   419                           ;init_PIC.c: 16:     PORTC = 0;
   420  0002A0  0E00               	movlw	0
   421  0002A2  6E82               	movwf	130,c	;volatile
   422  0002A4  0012               	return		;funcret
   423  0002A6  FFFF               	dw	65535	; errata NOP
   424  0002A8                     __end_of_init_PORTS:
   425                           	callstack 0
   426                           
   427 ;; *************** function _UART_start_comm *****************
   428 ;; Defined at:
   429 ;;		line 110 in file "Usart.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  elapsed_time    2    4[COMRAM] unsigned int 
   434 ;;  timeout         2    2[COMRAM] unsigned int 
   435 ;;  Rx_Data         1    6[COMRAM] unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      _Bool 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   445 ;;      Params:         0       0       0       0       0       0       0
   446 ;;      Locals:         5       0       0       0       0       0       0
   447 ;;      Temps:          1       0       0       0       0       0       0
   448 ;;      Totals:         6       0       0       0       0       0       0
   449 ;;Total ram usage:        6 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; Hardware stack levels required when called: 2
   452 ;; This function calls:
   453 ;;		_UART_write
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text2
   460  0001AC                     __ptext2:
   461                           	callstack 0
   462  0001AC                     _UART_start_comm:
   463                           	callstack 0
   464  0001AC  FFFF               	dw	65535	; assembler added errata NOP
   465  0001AE                     
   466                           ;Usart.c: 112:     unsigned int elapsed_time = 0;
   467  0001AE  0E00               	movlw	0
   468  0001B0  6E06               	movwf	(UART_start_comm@elapsed_time+1)^0,c
   469  0001B2  0E00               	movlw	0
   470  0001B4  6E05               	movwf	UART_start_comm@elapsed_time^0,c
   471                           
   472                           ;Usart.c: 113:     unsigned int timeout = 2000;
   473  0001B6  0E07               	movlw	7
   474  0001B8  6E04               	movwf	(UART_start_comm@timeout+1)^0,c
   475  0001BA  0ED0               	movlw	208
   476  0001BC  6E03               	movwf	UART_start_comm@timeout^0,c
   477  0001BE                     
   478                           ;Usart.c: 115:     UART_write(0xF0);
   479  0001BE  0EF0               	movlw	240
   480  0001C0  EC38  F001         	call	_UART_write
   481  0001C4                     
   482                           ;Usart.c: 116:     (INTCONbits.GIE = 0);
   483  0001C4  9EF2               	bcf	242,7,c	;volatile
   484                           
   485                           ;Usart.c: 117:     while((elapsed_time < timeout) && !PIR1bits.RCIF){
   486  0001C6  EFF3  F000         	goto	l838
   487  0001CA                     l834:
   488  0001CA  FFFF               	dw	65535	; assembler added errata NOP
   489                           
   490                           ;Usart.c: 118:         _delay((unsigned long)((20)*(4000000/4000.0)));
   491  0001CC  0E14               	movlw	20
   492  0001CE  6E02               	movwf	??_UART_start_comm^0,c
   493  0001D0  0E7D               	movlw	125
   494  0001D2                     u207:
   495  0001D2  FFFF               	dw	65535	; errata NOP
   496  0001D4  2EE8               	decfsz	wreg,f,c
   497  0001D6  D7FD               	bra	u207
   498  0001D8  2E02               	decfsz	??_UART_start_comm^0,f,c
   499  0001DA  D7FB               	bra	u207
   500  0001DC  D000               	nop2	
   501  0001DE                     
   502                           ;Usart.c: 119:         elapsed_time += 20;
   503  0001DE  0E14               	movlw	20
   504  0001E0  2605               	addwf	UART_start_comm@elapsed_time^0,f,c
   505  0001E2  0E00               	movlw	0
   506  0001E4  2206               	addwfc	(UART_start_comm@elapsed_time+1)^0,f,c
   507  0001E6                     l838:
   508  0001E6  FFFF               	dw	65535	; assembler added errata NOP
   509                           
   510                           ;Usart.c: 117:     while((elapsed_time < timeout) && !PIR1bits.RCIF){
   511  0001E8  5003               	movf	UART_start_comm@timeout^0,w,c
   512  0001EA  5C05               	subwf	UART_start_comm@elapsed_time^0,w,c
   513  0001EC  5004               	movf	(UART_start_comm@timeout+1)^0,w,c
   514  0001EE  5806               	subwfb	(UART_start_comm@elapsed_time+1)^0,w,c
   515  0001F0  B0D8               	btfsc	status,0,c
   516  0001F2  EFFD  F000         	goto	u21
   517  0001F6  EF00  F001         	goto	u20
   518  0001FA                     u21:
   519  0001FA  FFFF               	dw	65535	; assembler added errata NOP
   520  0001FC  EF09  F001         	goto	l99
   521  000200                     u20:
   522  000200  FFFF               	dw	65535	; assembler added errata NOP
   523  000202  AA9E               	btfss	158,5,c	;volatile
   524  000204  EF06  F001         	goto	u31
   525  000208  EF09  F001         	goto	u30
   526  00020C                     u31:
   527  00020C  FFFF               	dw	65535	; assembler added errata NOP
   528  00020E  EFE5  F000         	goto	l834
   529  000212                     u30:
   530  000212                     l99:
   531  000212  FFFF               	dw	65535	; assembler added errata NOP
   532                           
   533                           ;Usart.c: 121:     if (PIR1bits.RCIF){
   534  000214  AA9E               	btfss	158,5,c	;volatile
   535  000216  EF0F  F001         	goto	u41
   536  00021A  EF12  F001         	goto	u40
   537  00021E                     u41:
   538  00021E  FFFF               	dw	65535	; assembler added errata NOP
   539  000220  EF24  F001         	goto	l102
   540  000224                     u40:
   541  000224  FFFF               	dw	65535	; assembler added errata NOP
   542  000226                     
   543                           ;Usart.c: 122:     Rx_Data = RCREG;
   544  000226  CFAE F007          	movff	4014,UART_start_comm@Rx_Data	;volatile
   545  00022A                     
   546                           ;Usart.c: 123:         if (Rx_Data == 0xA5){
   547  00022A  0EA5               	movlw	165
   548  00022C  1807               	xorwf	UART_start_comm@Rx_Data^0,w,c
   549  00022E  A4D8               	btfss	status,2,c
   550  000230  EF1C  F001         	goto	u51
   551  000234  EF1F  F001         	goto	u50
   552  000238                     u51:
   553  000238  FFFF               	dw	65535	; assembler added errata NOP
   554  00023A  EF22  F001         	goto	l103
   555  00023E                     u50:
   556  00023E  FFFF               	dw	65535	; assembler added errata NOP
   557  000240  EF24  F001         	goto	l102
   558  000244                     l103:
   559  000244  FFFF               	dw	65535	; assembler added errata NOP
   560                           
   561                           ;Usart.c: 128:     (INTCONbits.GIE = 1);
   562  000246  8EF2               	bsf	242,7,c	;volatile
   563  000248                     l102:
   564  000248  FFFF               	dw	65535	; assembler added errata NOP
   565  00024A  0012               	return		;funcret
   566  00024C  FFFF               	dw	65535	; errata NOP
   567  00024E                     __end_of_UART_start_comm:
   568                           	callstack 0
   569                           
   570 ;; *************** function _UART_write *****************
   571 ;; Defined at:
   572 ;;		line 81 in file "Usart.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  c               1    wreg     unsigned char 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  c               1    0[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         0       0       0       0       0       0       0
   587 ;;      Locals:         1       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0
   589 ;;      Totals:         1       0       0       0       0       0       0
   590 ;;Total ram usage:        1 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;;		_UART_start_comm
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text3
   602  000270                     __ptext3:
   603                           	callstack 0
   604  000270                     _UART_write:
   605                           	callstack 0
   606  000270  FFFF               	dw	65535	; assembler added errata NOP
   607                           
   608                           ;incstack = 0
   609                           ;UART_write@c stored from wreg
   610  000272  6E01               	movwf	UART_write@c^0,c
   611  000274                     
   612                           ;Usart.c: 83:     TXREG = c;
   613  000274  C001  FFAD         	movff	UART_write@c,4013	;volatile
   614  000278                     l83:
   615  000278  FFFF               	dw	65535	; assembler added errata NOP
   616  00027A  A2AC               	btfss	172,1,c	;volatile
   617  00027C  EF42  F001         	goto	u11
   618  000280  EF45  F001         	goto	u10
   619  000284                     u11:
   620  000284  FFFF               	dw	65535	; assembler added errata NOP
   621  000286  EF3C  F001         	goto	l83
   622  00028A                     u10:
   623  00028A  FFFF               	dw	65535	; assembler added errata NOP
   624  00028C  0012               	return		;funcret
   625  00028E  FFFF               	dw	65535	; errata NOP
   626  000290                     __end_of_UART_write:
   627                           	callstack 0
   628                           
   629 ;; *************** function _UART_init *****************
   630 ;; Defined at:
   631 ;;		line 7 in file "Usart.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   645 ;;      Params:         0       0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text4
   660  00024E                     __ptext4:
   661                           	callstack 0
   662  00024E                     _UART_init:
   663                           	callstack 0
   664  00024E  FFFF               	dw	65535	; assembler added errata NOP
   665  000250                     
   666                           ;Usart.c: 9:     SPBRG = (4000000/9600/16)-1;
   667  000250  0E19               	movlw	25
   668  000252  6EAF               	movwf	175,c	;volatile
   669  000254                     
   670                           ;Usart.c: 11:     TXSTAbits.BRGH = 1;
   671  000254  84AC               	bsf	172,2,c	;volatile
   672  000256                     
   673                           ;Usart.c: 12:     TXSTAbits.SYNC = 0;
   674  000256  98AC               	bcf	172,4,c	;volatile
   675  000258                     
   676                           ;Usart.c: 13:     TXSTAbits.TX9 = 0;
   677  000258  9CAC               	bcf	172,6,c	;volatile
   678  00025A                     
   679                           ;Usart.c: 14:     TXSTAbits.TXEN = 1;
   680  00025A  8AAC               	bsf	172,5,c	;volatile
   681  00025C                     
   682                           ;Usart.c: 17:     RCSTAbits.CREN = 1;
   683  00025C  88AB               	bsf	171,4,c	;volatile
   684  00025E                     
   685                           ;Usart.c: 18:     RCSTAbits.RX9 = 0;
   686  00025E  9CAB               	bcf	171,6,c	;volatile
   687  000260                     
   688                           ;Usart.c: 21:     RCSTAbits.SPEN = 1;
   689  000260  8EAB               	bsf	171,7,c	;volatile
   690  000262                     
   691                           ;Usart.c: 23:     TRISC6 = 0;
   692  000262  9C94               	bcf	3988,6,c	;volatile
   693  000264                     
   694                           ;Usart.c: 24:     TRISC7 = 1;
   695  000264  8E94               	bsf	3988,7,c	;volatile
   696  000266                     
   697                           ;Usart.c: 28:     PIR1bits.RCIF = 0;
   698  000266  9A9E               	bcf	158,5,c	;volatile
   699  000268                     
   700                           ;Usart.c: 29:     PIE1bits.RCIE = 1;
   701  000268  8A9D               	bsf	157,5,c	;volatile
   702  00026A                     
   703                           ;Usart.c: 30:     INTCONbits.PEIE = 1;
   704  00026A  8CF2               	bsf	242,6,c	;volatile
   705  00026C  0012               	return		;funcret
   706  00026E  FFFF               	dw	65535	; errata NOP
   707  000270                     __end_of_UART_init:
   708                           	callstack 0
   709                           
   710 ;; *************** function _RX_char_UART *****************
   711 ;; Defined at:
   712 ;;		line 107 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   726 ;;      Params:         0       0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		Interrupt level 2
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	intcode
   740  000008                     __pintcode:
   741                           	callstack 0
   742  000008                     _RX_char_UART:
   743                           	callstack 0
   744  000008  FFFF               	dw	65535	; assembler added errata NOP
   745                           
   746                           ;incstack = 0
   747  00000A  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   748  00000C                     
   749                           ;main.c: 109:     if(RCIE && PIR1bits.RCIF)
   750  00000C  AA9D               	btfss	3997,5,c	;volatile
   751  00000E  EF0B  F000         	goto	i2u16_41
   752  000012  EF0E  F000         	goto	i2u16_40
   753  000016                     i2u16_41:
   754  000016  FFFF               	dw	65535	; assembler added errata NOP
   755  000018  EF39  F000         	goto	i2l51
   756  00001C                     i2u16_40:
   757  00001C  FFFF               	dw	65535	; assembler added errata NOP
   758  00001E  AA9E               	btfss	158,5,c	;volatile
   759  000020  EF14  F000         	goto	i2u17_41
   760  000024  EF17  F000         	goto	i2u17_40
   761  000028                     i2u17_41:
   762  000028  FFFF               	dw	65535	; assembler added errata NOP
   763  00002A  EF39  F000         	goto	i2l51
   764  00002E                     i2u17_40:
   765  00002E  FFFF               	dw	65535	; assembler added errata NOP
   766  000030                     
   767                           ;main.c: 110:     {;main.c: 111:         if(RCSTAbits.OERR){
   768  000030  A2AB               	btfss	171,1,c	;volatile
   769  000032  EF1D  F000         	goto	i2u18_41
   770  000036  EF20  F000         	goto	i2u18_40
   771  00003A                     i2u18_41:
   772  00003A  FFFF               	dw	65535	; assembler added errata NOP
   773  00003C  EF27  F000         	goto	i2l47
   774  000040                     i2u18_40:
   775  000040  FFFF               	dw	65535	; assembler added errata NOP
   776  000042                     
   777                           ;main.c: 112:         RCSTAbits.CREN = 0;
   778  000042  98AB               	bcf	171,4,c	;volatile
   779                           
   780                           ;main.c: 113:         RCSTAbits.CREN = 1;
   781  000044  88AB               	bsf	171,4,c	;volatile
   782  000046                     
   783                           ;main.c: 114:         RCREG;
   784  000046  50AE               	movf	174,w,c	;volatile
   785                           
   786                           ;main.c: 115:         RCREG;
   787  000048  50AE               	movf	174,w,c	;volatile
   788                           
   789                           ;main.c: 117:     }
   790  00004A  EF37  F000         	goto	i2l900
   791  00004E                     i2l47:
   792  00004E  FFFF               	dw	65535	; assembler added errata NOP
   793  000050  A4AB               	btfss	171,2,c	;volatile
   794  000052  EF2D  F000         	goto	i2u19_41
   795  000056  EF30  F000         	goto	i2u19_40
   796  00005A                     i2u19_41:
   797  00005A  FFFF               	dw	65535	; assembler added errata NOP
   798  00005C  EF34  F000         	goto	i2l898
   799  000060                     i2u19_40:
   800  000060  FFFF               	dw	65535	; assembler added errata NOP
   801  000062                     
   802                           ;main.c: 119:         RCREG;
   803  000062  50AE               	movf	174,w,c	;volatile
   804                           
   805                           ;main.c: 120:     }
   806  000064  EF37  F000         	goto	i2l900
   807  000068                     i2l898:
   808  000068  FFFF               	dw	65535	; assembler added errata NOP
   809                           
   810                           ;main.c: 122:     New_Char_Rx = 1;
   811  00006A  0E01               	movlw	1
   812  00006C  6E0C               	movwf	_New_Char_Rx^0,c
   813  00006E                     i2l900:
   814  00006E  FFFF               	dw	65535	; assembler added errata NOP
   815                           
   816                           ;main.c: 125:     PIR1bits.RCIF = 0;
   817  000070  9A9E               	bcf	158,5,c	;volatile
   818  000072                     i2l51:
   819  000072  FFFF               	dw	65535	; assembler added errata NOP
   820  000074  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   821  000076  0011               	retfie		f
   822  000078  FFFF               	dw	65535	; errata NOP
   823  00007A                     __end_of_RX_char_UART:
   824                           	callstack 0
   825  00007A  FFFF               	dw	65535	; assembler added errata NOP
   826                           
   827                           	psect	rparam
   828  0000                     
   829                           	psect	temp
   830  00000D                     btemp:
   831                           	callstack 0
   832  00000D                     	ds	1
   833  0000                     int$flags	set	btemp
   834  0000                     wtemp8	set	btemp+1
   835  0000                     ttemp5	set	btemp+1
   836  0000                     ttemp6	set	btemp+4
   837  0000                     ttemp7	set	btemp+8
   838                           
   839                           	psect	idloc
   840                           
   841                           ;Config register IDLOC0 @ 0x200000
   842                           ;	unspecified, using default values
   843  200000                     	org	2097152
   844  200000  FF                 	db	255
   845                           
   846                           ;Config register IDLOC1 @ 0x200001
   847                           ;	unspecified, using default values
   848  200001                     	org	2097153
   849  200001  FF                 	db	255
   850                           
   851                           ;Config register IDLOC2 @ 0x200002
   852                           ;	unspecified, using default values
   853  200002                     	org	2097154
   854  200002  FF                 	db	255
   855                           
   856                           ;Config register IDLOC3 @ 0x200003
   857                           ;	unspecified, using default values
   858  200003                     	org	2097155
   859  200003  FF                 	db	255
   860                           
   861                           ;Config register IDLOC4 @ 0x200004
   862                           ;	unspecified, using default values
   863  200004                     	org	2097156
   864  200004  FF                 	db	255
   865                           
   866                           ;Config register IDLOC5 @ 0x200005
   867                           ;	unspecified, using default values
   868  200005                     	org	2097157
   869  200005  FF                 	db	255
   870                           
   871                           ;Config register IDLOC6 @ 0x200006
   872                           ;	unspecified, using default values
   873  200006                     	org	2097158
   874  200006  FF                 	db	255
   875                           
   876                           ;Config register IDLOC7 @ 0x200007
   877                           ;	unspecified, using default values
   878  200007                     	org	2097159
   879  200007  FF                 	db	255
   880                           
   881                           	psect	config
   882                           
   883                           ; Padding undefined space
   884  300000                     	org	3145728
   885  300000  FF                 	db	255
   886                           
   887                           ;Config register CONFIG1H @ 0x300001
   888                           ;	Oscillator Selection bits
   889                           ;	OSC = XT, XT oscillator
   890                           ;	Oscillator System Clock Switch Enable bit
   891                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
   892  300001                     	org	3145729
   893  300001  21                 	db	33
   894                           
   895                           ;Config register CONFIG2L @ 0x300002
   896                           ;	Power-up Timer Enable bit
   897                           ;	PWRT = OFF, PWRT disabled
   898                           ;	Brown-out Reset Enable bit
   899                           ;	BOR = OFF, Brown-out Reset disabled
   900                           ;	Brown-out Reset Voltage bits
   901                           ;	BORV = 20, VBOR set to 2.0V
   902  300002                     	org	3145730
   903  300002  0D                 	db	13
   904                           
   905                           ;Config register CONFIG2H @ 0x300003
   906                           ;	Watchdog Timer Enable bit
   907                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   908                           ;	Watchdog Timer Postscale Select bits
   909                           ;	WDTPS = 128, 1:128
   910  300003                     	org	3145731
   911  300003  0E                 	db	14
   912                           
   913                           ; Padding undefined space
   914  300004                     	org	3145732
   915  300004  FF                 	db	255
   916                           
   917                           ;Config register CONFIG3H @ 0x300005
   918                           ;	CCP2 Mux bit
   919                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
   920  300005                     	org	3145733
   921  300005  00                 	db	0
   922                           
   923                           ;Config register CONFIG4L @ 0x300006
   924                           ;	Stack Full/Underflow Reset Enable bit
   925                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
   926                           ;	Low Voltage ICSP Enable bit
   927                           ;	LVP = OFF, Low Voltage ICSP disabled
   928                           ;	Background Debugger Enable bit
   929                           ;	DEBUG = 0x1, unprogrammed default
   930  300006                     	org	3145734
   931  300006  80                 	db	128
   932                           
   933                           ; Padding undefined space
   934  300007                     	org	3145735
   935  300007  FF                 	db	255
   936                           
   937                           ;Config register CONFIG5L @ 0x300008
   938                           ;	Code Protection bit
   939                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
   940                           ;	Code Protection bit
   941                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
   942                           ;	Code Protection bit
   943                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
   944                           ;	Code Protection bit
   945                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
   946  300008                     	org	3145736
   947  300008  0F                 	db	15
   948                           
   949                           ;Config register CONFIG5H @ 0x300009
   950                           ;	Boot Block Code Protection bit
   951                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
   952                           ;	Data EEPROM Code Protection bit
   953                           ;	CPD = OFF, Data EEPROM not code protected
   954  300009                     	org	3145737
   955  300009  C0                 	db	192
   956                           
   957                           ;Config register CONFIG6L @ 0x30000A
   958                           ;	Write Protection bit
   959                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
   960                           ;	Write Protection bit
   961                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
   962                           ;	Write Protection bit
   963                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
   964                           ;	Write Protection bit
   965                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
   966  30000A                     	org	3145738
   967  30000A  0F                 	db	15
   968                           
   969                           ;Config register CONFIG6H @ 0x30000B
   970                           ;	Configuration Register Write Protection bit
   971                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
   972                           ;	Boot Block Write Protection bit
   973                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
   974                           ;	Data EEPROM Write Protection bit
   975                           ;	WRTD = OFF, Data EEPROM not write protected
   976  30000B                     	org	3145739
   977  30000B  E0                 	db	224
   978                           
   979                           ;Config register CONFIG7L @ 0x30000C
   980                           ;	Table Read Protection bit
   981                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
   982                           ;	Table Read Protection bit
   983                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
   984                           ;	Table Read Protection bit
   985                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
   986                           ;	Table Read Protection bit
   987                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
   988  30000C                     	org	3145740
   989  30000C  0F                 	db	15
   990                           
   991                           ;Config register CONFIG7H @ 0x30000D
   992                           ;	Boot Block Table Read Protection bit
   993                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
   994  30000D                     	org	3145741
   995  30000D  40                 	db	64
   996                           tosu	equ	0xFFF
   997                           tosh	equ	0xFFE
   998                           tosl	equ	0xFFD
   999                           stkptr	equ	0xFFC
  1000                           pclatu	equ	0xFFB
  1001                           pclath	equ	0xFFA
  1002                           pcl	equ	0xFF9
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           prodh	equ	0xFF4
  1008                           prodl	equ	0xFF3
  1009                           indf0	equ	0xFEF
  1010                           postinc0	equ	0xFEE
  1011                           postdec0	equ	0xFED
  1012                           preinc0	equ	0xFEC
  1013                           plusw0	equ	0xFEB
  1014                           fsr0h	equ	0xFEA
  1015                           fsr0l	equ	0xFE9
  1016                           wreg	equ	0xFE8
  1017                           indf1	equ	0xFE7
  1018                           postinc1	equ	0xFE6
  1019                           postdec1	equ	0xFE5
  1020                           preinc1	equ	0xFE4
  1021                           plusw1	equ	0xFE3
  1022                           fsr1h	equ	0xFE2
  1023                           fsr1l	equ	0xFE1
  1024                           bsr	equ	0xFE0
  1025                           indf2	equ	0xFDF
  1026                           postinc2	equ	0xFDE
  1027                           postdec2	equ	0xFDD
  1028                           preinc2	equ	0xFDC
  1029                           plusw2	equ	0xFDB
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     10      12
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_start_comm
    _UART_start_comm->_UART_write

Critical Paths under _RX_char_UART in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _RX_char_UART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RX_char_UART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RX_char_UART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RX_char_UART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RX_char_UART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RX_char_UART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     120
                                              7 COMRAM     3     3      0
                          _UART_init
                    _UART_start_comm
                         _UART_write
                         _init_PORTS
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_start_comm                                      6     6      0      60
                                              1 COMRAM     6     6      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (1) _UART_write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _RX_char_UART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_start_comm
     _UART_write
   _UART_write
   _init_PORTS

 _RX_char_UART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      A       C       1        9.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      15        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 03 11:38:48 2021

                                                              l32 00BE  
                                                              l34 00F0  
                                                              l35 0154  
                                                              l36 0122  
                                                              l80 026C  
                                                              l83 0278  
                                                              l86 028C  
                                                              l99 0212  
                                                              u10 028A  
                                                              u11 0284  
                                                              u20 0200  
                                                              u21 01FA  
                                                              u30 0212  
                                                              u31 020C  
                                                              u40 0224  
                                                              u41 021E  
                                                              u50 023E  
                                                              u51 0238  
                                                              u60 00B0  
                                                              u61 00AA  
                                                              u70 00D0  
                                                              u71 00CA  
                                                              u80 00E4  
                                                              u81 00DE  
                                                              u90 0102  
                                                              u91 00FC  
                                                             l102 0248  
                                                             l103 0244  
                                                             l116 02A4  
                                                             l800 0250  
                                                             l810 025C  
                                                             l802 0254  
                                                             l820 0266  
                                                             l812 025E  
                                                             l804 0256  
                                                             l822 0268  
                                                             l814 0260  
                                                             l806 0258  
                                                             l830 01BE  
                                                             l824 026A  
                                                             l816 0262  
                                                             l808 025A  
                                                             l840 0202  
                                                             l832 01C4  
                                                             l818 0264  
                                                             l842 0226  
                                                             l834 01CA  
                                                             l850 008A  
                                                             l844 022A  
                                                             l836 01DE  
                                                             l828 01AE  
                                                             l860 009C  
                                                             l852 008E  
                                                             l838 01E6  
                                                             l870 0104  
                                                             l862 00B2  
                                                             l854 0090  
                                                             l792 0274  
                                                             l880 0170  
                                                             l872 0118  
                                                             l864 00B6  
                                                             l856 0094  
                                                             l848 0080  
                                                             l794 0292  
                                                             l882 018A  
                                                             l874 0136  
                                                             l866 00D2  
                                                             l858 0098  
                                                             l796 029A  
                                                             l876 014A  
                                                             l868 00E6  
                                                             l878 0154  
                                                             u100 0116  
                                                             u101 0110  
                                                             u110 0134  
                                                             u111 012E  
                                                             u120 0148  
                                                             u121 0142  
                                                             u130 0168  
                                                             u131 0160  
                                                             u140 0182  
                                                             u141 017A  
                                                             u150 019C  
                                                             u207 01D2  
                                                             u151 0194  
                                                             u136 016C  
                                                             u146 0186  
                                                             u156 01A0  
                                                             wreg 000FE8  
                                                            _LATB 000F8A  
                                                            _LATC 000F8B  
                                                            _RCIE 007CED  
                                                            i2l51 0072  
                                                            i2l47 004E  
                                                            _TXIE 007CEC  
                                                            _main 0080  
                                                            btemp 000D  
                                                            start 007C  
                                                    ___param_bank 000000  
                                                           ?_main 0001  
                                                           i2l900 006E  
                                                           i2l890 0030  
                                                           i2l892 0042  
                                                           i2l894 0046  
                                                           i2l886 000C  
                                                           i2l896 0062  
                                                           i2l888 001E  
                                                           i2l898 0068  
                                                           _RCREG 000FAE  
                                                           _SPBRG 000FAF  
                                                           _PORTB 000F81  
                                                           _PORTC 000F82  
                                                           _TRISB 000F93  
                                                           _TXREG 000FAD  
                                              __size_of_UART_init 0022  
                                                     ?_UART_write 0001  
                                            __end_of_RX_char_UART 007A  
                                                           ttemp5 000E  
                                                           ttemp6 0011  
                                                           ttemp7 0015  
                                                           status 000FD8  
                                                           wtemp8 000E  
                                                 __initialization 02A8  
                                                    __end_of_main 01AC  
                                                          ??_main 0008  
                                                   __activetblptr 000000  
                                                          _TRISC6 007CA6  
                                                          _TRISC7 007CA7  
                                                 _UART_start_comm 01AC  
                                               __end_of_UART_init 0270  
                                             __size_of_UART_write 0020  
                                                          isa$std 000001  
                                                      __accesstop 0080  
                                         __end_of__initialization 02AC  
                                     UART_start_comm@elapsed_time 0005  
                                                   ___rparam_used 000001  
                                                  __pcstackCOMRAM 0001  
                                                     _New_Char_Rx 000C  
                                           __size_of_RX_char_UART 0072  
                                         __end_of_UART_start_comm 024E  
                                          UART_start_comm@Rx_Data 0007  
                                                    _RX_char_UART 0008  
                                                         i2u16_40 001C  
                                                         i2u16_41 0016  
                                                         i2u17_40 002E  
                                                         i2u17_41 0028  
                                                         i2u18_40 0040  
                                                         i2u18_41 003A  
                                                         i2u19_40 0060  
                                                         i2u19_41 005A  
                                          UART_start_comm@timeout 0003  
                                                    ??_UART_write 0001  
                                                         __Hparam 0000  
                                                         __Lparam 0000  
                                                      _init_PORTS 0290  
                                                         __pcinit 02A8  
                                                         __ramtop 0600  
                                              __end_of_UART_write 0290  
                                                         __ptext0 0080  
                                                         __ptext1 0290  
                                                         __ptext2 01AC  
                                                         __ptext3 0270  
                                                         __ptext4 024E  
                                            end_of_initialization 02AC  
                                                ?_UART_start_comm 0001  
                                                       _RCSTAbits 000FAB  
                                                     UART_write@c 0001  
                                                       _PORTBbits 000F81  
                                                       _UART_init 024E  
                                                main@button1state 0008  
                                                main@button2state 0009  
                                                main@button3state 000A  
                                                       _TXSTAbits 000FAC  
                                                     ?_init_PORTS 0001  
                                                      ?_UART_init 0001  
                                             start_initialization 02A8  
                                                     __pbssCOMRAM 000B  
                                             __size_of_init_PORTS 0018  
                                                       __pintcode 0008  
                                                     ??_UART_init 0001  
                                                        _PIE1bits 000F9D  
                                                        _PIR1bits 000F9E  
                                                        _New_Char 000B  
                                                        __Hrparam 0000  
                                        __size_of_UART_start_comm 00A2  
                                                    ??_init_PORTS 0001  
                                                        __Lrparam 0000  
                                              __end_of_init_PORTS 02A8  
                                                   __size_of_main 012C  
                                                        isa$xinst 000000  
                                                        int$flags 000D  
                                                   ?_RX_char_UART 0001  
                                                      _INTCONbits 000FF2  
                                                        intlevel2 02B6  
                                                  ??_RX_char_UART 0001  
                                               ??_UART_start_comm 0002  
                                                      _UART_write 0270  
